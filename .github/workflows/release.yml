jobs:
  release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 5
    - continue-on-error: true
      name: Setup Java
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - continue-on-error: true
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      name: Import GPG keys
      run: 'gpg --import --batch <(echo "$GPG_PRIVATE_KEY") &> /dev/null

        # Gradle doesn''t support GPG 2.1 and later: https://github.com/gradle/gradle/issues/888

        gpg --export-secret-keys --pinentry-mode loopback --passphrase="$GPG_PASSPHRASE"
        > ~/.gnupg/secring.gpg

        rm -rf /tmp/secret

        '
    - continue-on-error: true
      if: runner.os == 'Linux'
      name: Run Tests (Linux)
      run: 'export DISPLAY=:90

        Xvfb -ac :90 -screen 0 1280x1024x24 > /dev/null 2>&1 &

        ./gradlew build test

        '
    - continue-on-error: true
      env:
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        TRANSIFEX_API: ${{ secrets.TRANSIFEX_API }}
      id: deploy
      name: Release to Maven Central
      run: './gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -i
        \

        -PsonatypeUsername=$SONATYPE_USERNAME -PsonatypePassword=$SONATYPE_PASSWORD
        -Ptransifex.api=$TRANSIFEX_API \

        -Psigning.keyId=$GPG_KEYNAME -Psigning.password=$GPG_PASSPHRASE -Psigning.secretKeyRingFile=$HOME/.gnupg/secring.gpg
        \

        -Dorg.gradle.internal.publish.checksums.insecure=true

        echo ::set-output name=exit_code::$?

        '
    - continue-on-error: true
      env:
        PAT: ${{ secrets.PAT }}
      if: steps.deploy.outputs.exit_code == 0
      name: Commit next development version
      run: 'git config --global user.name "abhinayagarwal"

        git config --global user.email "abhinay_agarwal@live.com"

        TAG=${GITHUB_REF/refs\/tags\//}

        newVersion=${TAG%.*}.$((${TAG##*.} + 1)) # Update version by 1

        sed -i "0,/^controlsfx_version = $TAG/s//controlsfx_version = $newVersion-SNAPSHOT/"
        gradle.properties

        git commit gradle.properties -m "Prepare development of $newVersion"

        git push https://abhinayagarwal:$PAT@github.com/$GITHUB_REPOSITORY HEAD:master

        '
    - continue-on-error: true
      env:
        PAT: ${{ secrets.PAT }}
      if: steps.deploy.outputs.exit_code == 0
      name: Update Javadocs
      run: 'TAG=${GITHUB_REF/refs\/tags\//}

        bash .github/scripts/update-javadoc.sh "$TAG"

        '
name: ControlsFX Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
